import * as React from "react";
import { useState, useEffect } from "react";
import Head from "next/head";
import styles from "@/styles/Home.module.css";
import { blueDark } from "@radix-ui/colors";
import { Table } from "@nextui-org/react";
import DatabaseState from "@/components/database-status";
import product from "@/config/products";
import { useFlags } from "launchdarkly-react-client-sdk";
import NavigationMenuDemo from "@/components/menu";

type Inventory = {
  id: number;
  toggle_name: string;
  price: string;
  description: string;
};

type Orders = {
  name: string;
  email: string;
};

type Product = {
  name: string;
  table_price: string;
  inventory: number;
};

const InventoryPage = () => {
  const { devdebug, dbTesting } = useFlags();
  const [inventory, setInventory] = useState<Inventory[]>([]);
  const [orders, setOrders] = useState<Orders[]>([]);

  useEffect(() => {
    const getInventory = async () => {
      try {
        const response = await fetch("/api/inventory");
        const jsonData = await response.json();
        setInventory(jsonData);
      } catch (error) {
        console.log("there was an error");
      }
    };

    const getOrders = async () => {
      try {
        const response = await fetch("/api/form");
        const jsonData = await response.json();
        setOrders(jsonData);
      } catch (error) {
        console.log("there was an error");
      }
    };

    getInventory();
    getOrders();
  }, [dbTesting]);

  return (
    <>
      <Head>
        <title>The Toggle Store</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/osmo.png" />
      </Head>
      <header className={styles.header}>
        <NavigationMenuDemo />
      </header>
      <main className={styles.main}>
        {devdebug && <DatabaseState />}
        <h1 style={{ padding: "10px" }}>Current Inventory</h1>
        {dbTesting == "postgres" ? (
          <Table
            css={{
              height: "auto",
              width: "1250px",
              backgroundColor: "white",
              alignContent: "right",
            }}
            selectionMode="single"
          >
            <Table.Header>
              <Table.Column>TOGGLE NAME</Table.Column>
              <Table.Column>PRICE</Table.Column>
              <Table.Column>DESCRIPTION</Table.Column>
              <Table.Column>CURRENT INVENTORY</Table.Column>
              <Table.Column>OUTSTANDING ORDERS</Table.Column>
            </Table.Header>
            <Table.Body>
              {inventory.map((inventory: Inventory) => (
                <Table.Row key="1">
                  <Table.Cell>{inventory.toggle_name}</Table.Cell>
                  <Table.Cell>{inventory.price}</Table.Cell>
                  <Table.Cell>{inventory.description}</Table.Cell>
                  <Table.Cell>{Math.floor(Math.random() * 100)}</Table.Cell>
                  <Table.Cell>{Math.floor(Math.random() * 10)}</Table.Cell>
                </Table.Row>
              ))}
            </Table.Body>
          </Table>
        ) : (
          <Table
            css={{
              height: "auto",
              width: "500px",
              backgroundColor: "white",
              alignContent: "center",
            }}
            selectionMode="single"
          >
            <Table.Header>
              <Table.Column>TOGGLE NAME</Table.Column>
              <Table.Column>PRICE</Table.Column>
              <Table.Column>CURRENT INVENTORY</Table.Column>
            </Table.Header>
            <Table.Body>
              {product.map((product: Product) => (
                <Table.Row key="1">
                  <Table.Cell>{product.name}</Table.Cell>
                  <Table.Cell>{product.table_price}</Table.Cell>
                  <Table.Cell>{product.inventory}</Table.Cell>
                </Table.Row>
              ))}
            </Table.Body>
          </Table>
        )}
        <br></br>
        <h1 style={{ padding: "10px" }}>Current Orders</h1>
        <Table
          css={{
            height: "auto",
            width: "500px",
            backgroundColor: "white",
            alignContent: "center",
          }}
          selectionMode="single"
        >
          <Table.Header>
            <Table.Column>NAME</Table.Column>
            <Table.Column>EMAIL</Table.Column>
          </Table.Header>
          <Table.Body>
            {orders.map((orders: Orders) => (
              <Table.Row key="1">
                <Table.Cell>{orders.name}</Table.Cell>
                <Table.Cell>{orders.email}</Table.Cell>
              </Table.Row>
            ))}
          </Table.Body>
        </Table>
      </main>
    </>
  );
};

// const NavigationMenuRoot = styled(NavigationMenu.Root, {
//   position: "relative",
//   display: "flex",
//   justifyContent: "space-between",
//   width: "100vw",
//   zIndex: 0,
// });

// const NavigationMenuList = styled(NavigationMenu.List, {
//   display: "flex",
//   justifyContent: "space-between",
//   backgroundColor: "none",
//   padding: 4,
//   borderRadius: 6,
//   listStyle: "none",
//   boxShadow: `0 2px 10px ${blackA.blackA7}`,
//   margin: 0,
// });

const itemStyles = {
  padding: "8px 12px",
  outline: "none",
  userSelect: "none",
  fontWeight: 500,
  lineHeight: 1,
  borderRadius: 4,
  fontSize: 15,
  color: blueDark.blue10,
  "&:focus": { boxShadow: `0 0 0 2px ${blueDark.blue7}` },
  "&:hover": { backgroundColor: blueDark.blue3 },
};

// const NavigationMenuTrigger = styled(NavigationMenu.Trigger, {
//   all: "unset",
//   ...itemStyles,
//   display: "flex",
//   alignItems: "center",
//   justifyContent: "space-between",
//   gap: 2,
// });

// const NavigationMenuLink = styled(NavigationMenu.Link, {
//   ...itemStyles,
//   display: "block",
//   textDecoration: "none",
//   fontSize: 15,
//   lineHeight: 1,
// });

export default InventoryPage;
